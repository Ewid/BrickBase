{
	"id": "d072ad9029cc98776eae42a334ccf2c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/registry/PropertyRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\";\n\ncontract PropertyRegistry is Ownable {\n    struct RegisteredProperty {\n        address propertyNFT;\n        address propertyToken;\n        bool isActive;\n        uint256 registrationDate;\n    }\n    \n    // Array to store all registered properties\n    RegisteredProperty[] public registeredProperties;\n    \n    // Mapping from propertyNFT address to index in registeredProperties array\n    mapping(address => uint256) public propertyIndex;\n    \n    // Events\n    event PropertyRegistered(address indexed propertyNFT, address indexed propertyToken, uint256 timestamp);\n    event PropertyStatusChanged(address indexed propertyNFT, bool isActive);\n    \n    constructor(address initialOwner) Ownable(initialOwner) {}\n    \n    // Register a new property\n    function registerProperty(address _propertyNFT, address _propertyToken) external onlyOwner {\n        // Ensure the property hasn't been registered before\n        require(propertyIndex[_propertyNFT] == 0, \"Property already registered\");\n        \n        registeredProperties.push(RegisteredProperty({\n            propertyNFT: _propertyNFT,\n            propertyToken: _propertyToken,\n            isActive: true,\n            registrationDate: block.timestamp\n        }));\n        \n        // Store the index (add 1 to handle the zero index case)\n        propertyIndex[_propertyNFT] = registeredProperties.length;\n        \n        emit PropertyRegistered(_propertyNFT, _propertyToken, block.timestamp);\n    }\n    \n    // Change the status of a property (active/inactive)\n    function setPropertyStatus(address _propertyNFT, bool _isActive) external onlyOwner {\n        uint256 index = propertyIndex[_propertyNFT];\n        require(index > 0, \"Property not registered\");\n        \n        // Adjust for the +1 offset in propertyIndex\n        registeredProperties[index - 1].isActive = _isActive;\n        \n        emit PropertyStatusChanged(_propertyNFT, _isActive);\n    }\n    \n    // Get all registered properties\n    function getAllProperties() external view returns (RegisteredProperty[] memory) {\n        return registeredProperties;\n    }\n    \n    // Get active properties count\n    function getActivePropertiesCount() external view returns (uint256) {\n        uint256 count = 0;\n        for (uint256 i = 0; i < registeredProperties.length; i++) {\n            if (registeredProperties[i].isActive) {\n                count++;\n            }\n        }\n        return count;\n    }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"contracts/registry/PropertyRegistry.sol": {
				"PropertyRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "propertyNFT",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "propertyToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PropertyRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "propertyNFT",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "PropertyStatusChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getActivePropertiesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllProperties",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "propertyNFT",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "propertyToken",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isActive",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "registrationDate",
											"type": "uint256"
										}
									],
									"internalType": "struct PropertyRegistry.RegisteredProperty[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "propertyIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_propertyNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_propertyToken",
									"type": "address"
								}
							],
							"name": "registerProperty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredProperties",
							"outputs": [
								{
									"internalType": "address",
									"name": "propertyNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "propertyToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "registrationDate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_propertyNFT",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isActive",
									"type": "bool"
								}
							],
							"name": "setPropertyStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry/PropertyRegistry.sol\":165:2592  contract PropertyRegistry is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/registry/PropertyRegistry.sol\":818:876  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/registry/PropertyRegistry.sol\":860:872  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/registry/PropertyRegistry.sol\":818:876  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/registry/PropertyRegistry.sol\":165:2592  contract PropertyRegistry is Ownable {... */\n  jump(tag_15)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_15:\n    /* \"contracts/registry/PropertyRegistry.sol\":165:2592  contract PropertyRegistry is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry/PropertyRegistry.sol\":165:2592  contract PropertyRegistry is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa4beaa58\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaaf02937\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x02fb243a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e4774c6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d51402c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x603ddf11\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry/PropertyRegistry.sol\":917:1621  function registerProperty(address _propertyNFT, address _propertyToken) external onlyOwner {... */\n    tag_3:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/registry/PropertyRegistry.sol\":554:602  mapping(address => uint256) public propertyIndex */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":794:819   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":782:784   */\n      0x20\n        /* \"#utility.yul\":767:785   */\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":554:602  mapping(address => uint256) public propertyIndex */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/PropertyRegistry.sol\":2128:2252  function getAllProperties() external view returns (RegisteredProperty[] memory) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"contracts/registry/PropertyRegistry.sol\":2297:2590  function getActivePropertiesCount() external view returns (uint256) {... */\n    tag_6:\n      tag_17\n      tag_28\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_13\n      tag_31\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1998:2049   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1986:1988   */\n      0x20\n        /* \"#utility.yul\":1971:1989   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_21\n        /* \"#utility.yul\":1852:2055   */\n      jump\n        /* \"contracts/registry/PropertyRegistry.sol\":416:464  RegisteredProperty[] public registeredProperties */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2526:2541   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2508:2542   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2578:2593   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2573:2575   */\n      0x20\n        /* \"#utility.yul\":2558:2576   */\n      dup6\n      add\n        /* \"#utility.yul\":2551:2594   */\n      mstore\n        /* \"#utility.yul\":2637:2651   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2630:2652   */\n      iszero\n        /* \"#utility.yul\":2610:2628   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2603:2653   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2684:2686   */\n      0x60\n        /* \"#utility.yul\":2669:2687   */\n      dup3\n      add\n        /* \"#utility.yul\":2662:2696   */\n      mstore\n        /* \"#utility.yul\":2457:2460   */\n      0x80\n        /* \"#utility.yul\":2442:2461   */\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":416:464  RegisteredProperty[] public registeredProperties */\n      tag_21\n        /* \"#utility.yul\":2245:2702   */\n      jump\n        /* \"contracts/registry/PropertyRegistry.sol\":1688:2081  function setPropertyStatus(address _propertyNFT, bool _isActive) external onlyOwner {... */\n    tag_10:\n      tag_13\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_13\n      tag_47\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/registry/PropertyRegistry.sol\":917:1621  function registerProperty(address _propertyNFT, address _propertyToken) external onlyOwner {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/registry/PropertyRegistry.sol\":1087:1114  propertyIndex[_propertyNFT] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1087:1100  propertyIndex */\n      0x02\n        /* \"contracts/registry/PropertyRegistry.sol\":1087:1114  propertyIndex[_propertyNFT] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/registry/PropertyRegistry.sol\":1087:1119  propertyIndex[_propertyNFT] == 0 */\n      iszero\n        /* \"contracts/registry/PropertyRegistry.sol\":1079:1151  require(propertyIndex[_propertyNFT] == 0, \"Property already registered\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x20\n        /* \"contracts/registry/PropertyRegistry.sol\":1079:1151  require(propertyIndex[_propertyNFT] == 0, \"Property already registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3243:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3302   */\n      0x1b\n        /* \"#utility.yul\":3280:3298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3273:3303   */\n      mstore\n        /* \"#utility.yul\":3339:3368   */\n      0x50726f706572747920616c726561647920726567697374657265640000000000\n        /* \"#utility.yul\":3319:3337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3312:3369   */\n      mstore\n        /* \"#utility.yul\":3386:3404   */\n      0x64\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":1079:1151  require(propertyIndex[_propertyNFT] == 0, \"Property already registered\") */\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/registry/PropertyRegistry.sol\":1196:1383  RegisteredProperty({... */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup5\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1170:1190  registeredProperties */\n      0x01\n        /* \"contracts/registry/PropertyRegistry.sol\":1196:1383  RegisteredProperty({... */\n      dup7\n      dup9\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1357:1372  block.timestamp */\n      timestamp\n        /* \"contracts/registry/PropertyRegistry.sol\":1196:1383  RegisteredProperty({... */\n      0x60\n      dup10\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1170:1384  registeredProperties.push(RegisteredProperty({... */\n      dup4\n      sload\n      dup1\n      dup6\n      add\n      dup6\n      sstore\n      0x00\n      dup6\n      dup2\n      mstore\n      swap11\n      mload\n      0x03\n      swap1\n      swap2\n      mul\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      dup2\n      add\n      dup1\n      sload\n      swap3\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      swap5\n      mload\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7\n      dup7\n      add\n      dup1\n      sload\n      swap5\n      mload\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap6\n      and\n      swap2\n      swap1\n      swap11\n      and\n      or\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap8\n      sstore\n      mload\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1498:1525  registeredProperties.length */\n      sload\n        /* \"contracts/registry/PropertyRegistry.sol\":1468:1495  propertyIndex[_propertyNFT] */\n      dup4\n      dup7\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1170:1384  registeredProperties.push(RegisteredProperty({... */\n      0x02\n        /* \"contracts/registry/PropertyRegistry.sol\":1468:1495  propertyIndex[_propertyNFT] */\n      dup3\n      mstore\n      swap5\n      dup7\n      swap1\n      keccak256\n        /* \"contracts/registry/PropertyRegistry.sol\":1468:1525  propertyIndex[_propertyNFT] = registeredProperties.length */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1549:1614  PropertyRegistered(_propertyNFT, _propertyToken, block.timestamp) */\n      swap4\n      mload\n        /* \"#utility.yul\":794:819   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1196:1383  RegisteredProperty({... */\n      swap2\n        /* \"contracts/registry/PropertyRegistry.sol\":1549:1614  PropertyRegistered(_propertyNFT, _propertyToken, block.timestamp) */\n      0x893a9c1d8d241f202772e01f1eaa3cea88cd9b2a5bb4ebd1f98bc7df4f740fac\n      swap2\n        /* \"#utility.yul\":767:785   */\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":1549:1614  PropertyRegistered(_propertyNFT, _propertyToken, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/registry/PropertyRegistry.sol\":917:1621  function registerProperty(address _propertyNFT, address _propertyToken) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/registry/PropertyRegistry.sol\":2128:2252  function getAllProperties() external view returns (RegisteredProperty[] memory) {... */\n    tag_24:\n        /* \"contracts/registry/PropertyRegistry.sol\":2179:2206  RegisteredProperty[] memory */\n      0x60\n        /* \"contracts/registry/PropertyRegistry.sol\":2225:2245  registeredProperties */\n      0x01\n        /* \"contracts/registry/PropertyRegistry.sol\":2218:2245  return registeredProperties */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_59:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x03\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup5\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      swap2\n      dup3\n      and\n      dup6\n      dup8\n      add\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      0x60\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_59)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":2128:2252  function getAllProperties() external view returns (RegisteredProperty[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/registry/PropertyRegistry.sol\":2297:2590  function getActivePropertiesCount() external view returns (uint256) {... */\n    tag_28:\n        /* \"contracts/registry/PropertyRegistry.sol\":2356:2363  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/registry/PropertyRegistry.sol\":2402:2562  for (uint256 i = 0; i < registeredProperties.length; i++) {... */\n    tag_63:\n        /* \"contracts/registry/PropertyRegistry.sol\":2426:2446  registeredProperties */\n      0x01\n        /* \"contracts/registry/PropertyRegistry.sol\":2426:2453  registeredProperties.length */\n      sload\n        /* \"contracts/registry/PropertyRegistry.sol\":2422:2453  i < registeredProperties.length */\n      dup2\n      lt\n        /* \"contracts/registry/PropertyRegistry.sol\":2402:2562  for (uint256 i = 0; i < registeredProperties.length; i++) {... */\n      iszero\n      tag_64\n      jumpi\n        /* \"contracts/registry/PropertyRegistry.sol\":2478:2498  registeredProperties */\n      0x01\n        /* \"contracts/registry/PropertyRegistry.sol\":2499:2500  i */\n      dup2\n        /* \"contracts/registry/PropertyRegistry.sol\":2478:2501  registeredProperties[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_67\n      jumpi\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":2478:2510  registeredProperties[i].isActive */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/registry/PropertyRegistry.sol\":2474:2552  if (registeredProperties[i].isActive) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/registry/PropertyRegistry.sol\":2530:2537  count++ */\n      dup2\n      tag_71\n      dup2\n      tag_72\n      jump\t// in\n    tag_71:\n      swap3\n      pop\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":2474:2552  if (registeredProperties[i].isActive) {... */\n    tag_70:\n        /* \"contracts/registry/PropertyRegistry.sol\":2455:2458  i++ */\n      dup1\n      tag_73\n      dup2\n      tag_72\n      jump\t// in\n    tag_73:\n      swap2\n      pop\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":2402:2562  for (uint256 i = 0; i < registeredProperties.length; i++) {... */\n      jump(tag_63)\n    tag_64:\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":2578:2583  count */\n      swap2\n        /* \"contracts/registry/PropertyRegistry.sol\":2297:2590  function getActivePropertiesCount() external view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/registry/PropertyRegistry.sol\":416:464  RegisteredProperty[] public registeredProperties */\n    tag_39:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap4\n      pop\n      swap1\n      dup3\n      and\n      swap2\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup5\n      jump\t// out\n        /* \"contracts/registry/PropertyRegistry.sol\":1688:2081  function setPropertyStatus(address _propertyNFT, bool _isActive) external onlyOwner {... */\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/registry/PropertyRegistry.sol\":1798:1825  propertyIndex[_propertyNFT] */\n      dup3\n      and\n        /* \"contracts/registry/PropertyRegistry.sol\":1782:1795  uint256 index */\n      0x00\n        /* \"contracts/registry/PropertyRegistry.sol\":1798:1825  propertyIndex[_propertyNFT] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/registry/PropertyRegistry.sol\":1798:1811  propertyIndex */\n      0x02\n        /* \"contracts/registry/PropertyRegistry.sol\":1798:1825  propertyIndex[_propertyNFT] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/registry/PropertyRegistry.sol\":1843:1852  index > 0 */\n      dup1\n        /* \"contracts/registry/PropertyRegistry.sol\":1835:1880  require(index > 0, \"Property not registered\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4021:4023   */\n      0x20\n        /* \"contracts/registry/PropertyRegistry.sol\":1835:1880  require(index > 0, \"Property not registered\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4003:4024   */\n      mstore\n        /* \"#utility.yul\":4060:4062   */\n      0x17\n        /* \"#utility.yul\":4040:4058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4033:4063   */\n      mstore\n        /* \"#utility.yul\":4099:4124   */\n      0x50726f7065727479206e6f742072656769737465726564000000000000000000\n        /* \"#utility.yul\":4079:4097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4072:4125   */\n      mstore\n        /* \"#utility.yul\":4142:4160   */\n      0x64\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":1835:1880  require(index > 0, \"Property not registered\") */\n      tag_54\n        /* \"#utility.yul\":3819:4166   */\n      jump\n        /* \"contracts/registry/PropertyRegistry.sol\":1835:1880  require(index > 0, \"Property not registered\") */\n    tag_85:\n        /* \"contracts/registry/PropertyRegistry.sol\":1995:2004  _isActive */\n      dup2\n        /* \"contracts/registry/PropertyRegistry.sol\":1952:1972  registeredProperties */\n      0x01\n        /* \"contracts/registry/PropertyRegistry.sol\":1973:1982  index - 1 */\n      tag_88\n        /* \"contracts/registry/PropertyRegistry.sol\":1952:1972  registeredProperties */\n      dup2\n        /* \"contracts/registry/PropertyRegistry.sol\":1973:1978  index */\n      dup5\n        /* \"contracts/registry/PropertyRegistry.sol\":1973:1982  index - 1 */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/registry/PropertyRegistry.sol\":1952:1983  registeredProperties[index - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_91\n      jumpi\n      tag_91\n      tag_68\n      jump\t// in\n    tag_91:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/registry/PropertyRegistry.sol\":1952:1992  registeredProperties[index - 1].isActive */\n      0x01\n      add\n      0x14\n        /* \"contracts/registry/PropertyRegistry.sol\":1952:2004  registeredProperties[index - 1].isActive = _isActive */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":2050:2062  _propertyNFT */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/registry/PropertyRegistry.sol\":2028:2074  PropertyStatusChanged(_propertyNFT, _isActive) */\n      and\n      0x67f1125df14f08f21b9416ba66f0c4e6093ce1bbfa949a38a8cd5a52f8b56ed6\n        /* \"contracts/registry/PropertyRegistry.sol\":2064:2073  _isActive */\n      dup4\n        /* \"contracts/registry/PropertyRegistry.sol\":2028:2074  PropertyStatusChanged(_propertyNFT, _isActive) */\n      mload(0x40)\n      tag_93\n      swap2\n        /* \"#utility.yul\":4469:4483   */\n      iszero\n        /* \"#utility.yul\":4462:4484   */\n      iszero\n        /* \"#utility.yul\":4444:4485   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4432:4434   */\n      0x20\n        /* \"#utility.yul\":4417:4435   */\n      add\n      swap1\n        /* \"#utility.yul\":4304:4491   */\n      jump\n        /* \"contracts/registry/PropertyRegistry.sol\":2028:2074  PropertyStatusChanged(_propertyNFT, _isActive) */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/PropertyRegistry.sol\":1772:2081  {... */\n      pop\n        /* \"contracts/registry/PropertyRegistry.sol\":1688:2081  function setPropertyStatus(address _propertyNFT, bool _isActive) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_98\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1998:2049   */\n      mstore\n        /* \"#utility.yul\":1971:1989   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_54\n        /* \"#utility.yul\":1852:2055   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_77\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1998:2049   */\n      mstore\n        /* \"#utility.yul\":1971:1989   */\n      0x24\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_54\n        /* \"#utility.yul\":1852:2055   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_110:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_114:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:452   */\n    tag_15:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_116:\n        /* \"#utility.yul\":360:389   */\n      tag_117\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_110\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":350:389   */\n      swap2\n      pop\n        /* \"#utility.yul\":408:446   */\n      tag_118\n        /* \"#utility.yul\":442:444   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup5\n        /* \"#utility.yul\":427:445   */\n      add\n        /* \"#utility.yul\":408:446   */\n      tag_110\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":398:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:452   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":457:643   */\n    tag_19:\n        /* \"#utility.yul\":516:522   */\n      0x00\n        /* \"#utility.yul\":569:571   */\n      0x20\n        /* \"#utility.yul\":557:566   */\n      dup3\n        /* \"#utility.yul\":548:555   */\n      dup5\n        /* \"#utility.yul\":544:567   */\n      sub\n        /* \"#utility.yul\":540:572   */\n      slt\n        /* \"#utility.yul\":537:589   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":585:586   */\n      0x00\n        /* \"#utility.yul\":582:583   */\n      dup1\n        /* \"#utility.yul\":575:587   */\n      revert\n        /* \"#utility.yul\":537:589   */\n    tag_120:\n        /* \"#utility.yul\":608:637   */\n      tag_121\n        /* \"#utility.yul\":627:636   */\n      dup3\n        /* \"#utility.yul\":608:637   */\n      tag_110\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":598:637   */\n      swap4\n        /* \"#utility.yul\":457:643   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":830:1847   */\n    tag_26:\n        /* \"#utility.yul\":1069:1071   */\n      0x20\n        /* \"#utility.yul\":1121:1142   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1191:1204   */\n      dup3\n      mload\n        /* \"#utility.yul\":1094:1112   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1213:1235   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1040:1044   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1069:1071   */\n      swap1\n        /* \"#utility.yul\":1254:1256   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1272:1290   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1313:1328   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1040:1044   */\n      dup6\n        /* \"#utility.yul\":1356:1821   */\n    tag_124:\n        /* \"#utility.yul\":1370:1376   */\n      dup3\n        /* \"#utility.yul\":1367:1368   */\n      dup2\n        /* \"#utility.yul\":1364:1377   */\n      lt\n        /* \"#utility.yul\":1356:1821   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":1429:1442   */\n      dup2\n      mload\n        /* \"#utility.yul\":1513:1522   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1509:1527   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1497:1528   */\n      dup7\n      mstore\n        /* \"#utility.yul\":1572:1583   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":1566:1584   */\n      mload\n        /* \"#utility.yul\":1562:1589   */\n      and\n        /* \"#utility.yul\":1548:1560   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":1541:1590   */\n      mstore\n        /* \"#utility.yul\":1644:1655   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1638:1656   */\n      mload\n        /* \"#utility.yul\":1631:1657   */\n      iszero\n        /* \"#utility.yul\":1624:1658   */\n      iszero\n        /* \"#utility.yul\":1610:1622   */\n      dup7\n      dup7\n      add\n        /* \"#utility.yul\":1603:1659   */\n      mstore\n        /* \"#utility.yul\":1682:1686   */\n      0x60\n        /* \"#utility.yul\":1726:1737   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1720:1738   */\n      mload\n        /* \"#utility.yul\":1706:1718   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":1699:1739   */\n      mstore\n        /* \"#utility.yul\":1768:1772   */\n      0x80\n        /* \"#utility.yul\":1759:1773   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1796:1811   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1482:1483   */\n      0x01\n        /* \"#utility.yul\":1385:1394   */\n      add\n        /* \"#utility.yul\":1356:1821   */\n      jump(tag_124)\n    tag_126:\n      pop\n        /* \"#utility.yul\":1838:1841   */\n      swap2\n      swap8\n        /* \"#utility.yul\":830:1847   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2060:2240   */\n    tag_38:\n        /* \"#utility.yul\":2119:2125   */\n      0x00\n        /* \"#utility.yul\":2172:2174   */\n      0x20\n        /* \"#utility.yul\":2160:2169   */\n      dup3\n        /* \"#utility.yul\":2151:2158   */\n      dup5\n        /* \"#utility.yul\":2147:2170   */\n      sub\n        /* \"#utility.yul\":2143:2175   */\n      slt\n        /* \"#utility.yul\":2140:2192   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2140:2192   */\n    tag_129:\n      pop\n        /* \"#utility.yul\":2211:2234   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2060:2240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2707:3054   */\n    tag_44:\n        /* \"#utility.yul\":2772:2778   */\n      0x00\n        /* \"#utility.yul\":2780:2786   */\n      dup1\n        /* \"#utility.yul\":2833:2835   */\n      0x40\n        /* \"#utility.yul\":2821:2830   */\n      dup4\n        /* \"#utility.yul\":2812:2819   */\n      dup6\n        /* \"#utility.yul\":2808:2831   */\n      sub\n        /* \"#utility.yul\":2804:2836   */\n      slt\n        /* \"#utility.yul\":2801:2853   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2849:2850   */\n      0x00\n        /* \"#utility.yul\":2846:2847   */\n      dup1\n        /* \"#utility.yul\":2839:2851   */\n      revert\n        /* \"#utility.yul\":2801:2853   */\n    tag_132:\n        /* \"#utility.yul\":2872:2901   */\n      tag_133\n        /* \"#utility.yul\":2891:2900   */\n      dup4\n        /* \"#utility.yul\":2872:2901   */\n      tag_110\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2862:2901   */\n      swap2\n      pop\n        /* \"#utility.yul\":2951:2953   */\n      0x20\n        /* \"#utility.yul\":2940:2949   */\n      dup4\n        /* \"#utility.yul\":2936:2954   */\n      add\n        /* \"#utility.yul\":2923:2955   */\n      calldataload\n        /* \"#utility.yul\":2998:3003   */\n      dup1\n        /* \"#utility.yul\":2991:3004   */\n      iszero\n        /* \"#utility.yul\":2984:3005   */\n      iszero\n        /* \"#utility.yul\":2977:2982   */\n      dup2\n        /* \"#utility.yul\":2974:3006   */\n      eq\n        /* \"#utility.yul\":2964:3024   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":3020:3021   */\n      0x00\n        /* \"#utility.yul\":3017:3018   */\n      dup1\n        /* \"#utility.yul\":3010:3022   */\n      revert\n        /* \"#utility.yul\":2964:3024   */\n    tag_134:\n        /* \"#utility.yul\":3043:3048   */\n      dup1\n        /* \"#utility.yul\":3033:3048   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2707:3054   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3542   */\n    tag_68:\n        /* \"#utility.yul\":3476:3486   */\n      0x4e487b71\n        /* \"#utility.yul\":3471:3474   */\n      0xe0\n        /* \"#utility.yul\":3467:3487   */\n      shl\n        /* \"#utility.yul\":3464:3465   */\n      0x00\n        /* \"#utility.yul\":3457:3488   */\n      mstore\n        /* \"#utility.yul\":3507:3511   */\n      0x32\n        /* \"#utility.yul\":3504:3505   */\n      0x04\n        /* \"#utility.yul\":3497:3512   */\n      mstore\n        /* \"#utility.yul\":3531:3535   */\n      0x24\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3521:3536   */\n      revert\n        /* \"#utility.yul\":3547:3674   */\n    tag_111:\n        /* \"#utility.yul\":3608:3618   */\n      0x4e487b71\n        /* \"#utility.yul\":3603:3606   */\n      0xe0\n        /* \"#utility.yul\":3599:3619   */\n      shl\n        /* \"#utility.yul\":3596:3597   */\n      0x00\n        /* \"#utility.yul\":3589:3620   */\n      mstore\n        /* \"#utility.yul\":3639:3643   */\n      0x11\n        /* \"#utility.yul\":3636:3637   */\n      0x04\n        /* \"#utility.yul\":3629:3644   */\n      mstore\n        /* \"#utility.yul\":3663:3667   */\n      0x24\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3653:3668   */\n      revert\n        /* \"#utility.yul\":3679:3814   */\n    tag_72:\n        /* \"#utility.yul\":3718:3721   */\n      0x00\n        /* \"#utility.yul\":3739:3756   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3736:3779   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3759:3777   */\n      tag_140\n      tag_111\n      jump\t// in\n    tag_140:\n      pop\n        /* \"#utility.yul\":3806:3807   */\n      0x01\n        /* \"#utility.yul\":3795:3808   */\n      add\n      swap1\n        /* \"#utility.yul\":3679:3814   */\n      jump\t// out\n        /* \"#utility.yul\":4171:4299   */\n    tag_89:\n        /* \"#utility.yul\":4238:4247   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4259:4270   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4256:4293   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4273:4291   */\n      tag_144\n      tag_111\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4171:4299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205d4873dd5731d43055aec892392835ca4e9af5b7485d5674507412b117f7d9e464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_318": {
									"entryPoint": 110,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:514:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:3"
															},
															"nodeType": "YulIf",
															"src": "105:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:3"
															},
															"nodeType": "YulIf",
															"src": "204:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:3",
														"type": ""
													}
												],
												"src": "14:290:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "493:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "498:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "502:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:3",
														"type": ""
													}
												],
												"src": "309:203:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161091938038061091983398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b61081c806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fd5780638da5cb5b14610105578063a4beaa5814610120578063aaf0293714610164578063f2fde38b1461017757600080fd5b806302fb243a146100985780632e4774c6146100ad5780633d51402c146100e0578063603ddf11146100f5575b600080fd5b6100ab6100a636600461066c565b61018a565b005b6100cd6100bb36600461069f565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100e8610335565b6040516100d791906106c1565b6100cd6103cc565b6100ab610438565b6000546040516001600160a01b0390911681526020016100d7565b61013361012e366004610733565b61044c565b604080516001600160a01b0395861681529490931660208501529015159183019190915260608201526080016100d7565b6100ab61017236600461074c565b610498565b6100ab61018536600461069f565b610595565b6101926105d3565b6001600160a01b038216600090815260026020526040902054156101fd5760405162461bcd60e51b815260206004820152601b60248201527f50726f706572747920616c72656164792072656769737465726564000000000060448201526064015b60405180910390fd5b604080516080810182526001600160a01b038481168083528482166020808501828152600186880181815242606089018181528354808501855560008581529a5160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681018054928c166001600160a01b03199093169290921790915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78601805494511515600160a01b026001600160a81b031990951691909a161792909217909755517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf890920191909155548386526002825294869020949094559351918252917f893a9c1d8d241f202772e01f1eaa3cea88cd9b2a5bb4ebd1f98bc7df4f740fac910160405180910390a35050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156103c3576000848152602090819020604080516080810182526003860290920180546001600160a01b03908116845260018083015491821685870152600160a01b90910460ff161515928401929092526002015460608301529083529092019101610359565b50505050905090565b600080805b60015481101561043257600181815481106103ee576103ee610788565b906000526020600020906003020160010160149054906101000a900460ff1615610420578161041c816107b4565b9250505b8061042a816107b4565b9150506103d1565b50919050565b6104406105d3565b61044a6000610600565b565b6001818154811061045c57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216935090821691600160a01b900460ff169084565b6104a06105d3565b6001600160a01b038216600090815260026020526040902054806105065760405162461bcd60e51b815260206004820152601760248201527f50726f7065727479206e6f74207265676973746572656400000000000000000060448201526064016101f4565b81600161051381846107cd565b8154811061052357610523610788565b906000526020600020906003020160010160146101000a81548160ff021916908315150217905550826001600160a01b03167f67f1125df14f08f21b9416ba66f0c4e6093ce1bbfa949a38a8cd5a52f8b56ed683604051610588911515815260200190565b60405180910390a2505050565b61059d6105d3565b6001600160a01b0381166105c757604051631e4fbdf760e01b8152600060048201526024016101f4565b6105d081610600565b50565b6000546001600160a01b0316331461044a5760405163118cdaa760e01b81523360048201526024016101f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461066757600080fd5b919050565b6000806040838503121561067f57600080fd5b61068883610650565b915061069660208401610650565b90509250929050565b6000602082840312156106b157600080fd5b6106ba82610650565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561072657815180516001600160a01b0390811686528782015116878601528581015115158686015260609081015190850152608090930192908501906001016106de565b5091979650505050505050565b60006020828403121561074557600080fd5b5035919050565b6000806040838503121561075f57600080fd5b61076883610650565b91506020830135801515811461077d57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107c6576107c661079e565b5060010190565b818103818111156107e0576107e061079e565b9291505056fea26469706673582212205d4873dd5731d43055aec892392835ca4e9af5b7485d5674507412b117f7d9e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x919 CODESIZE SUB DUP1 PUSH2 0x919 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x6E JUMP JUMPDEST POP POP PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x81C DUP1 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xA4BEAA58 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xAAF02937 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB243A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4774C6 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3D51402C EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x603DDF11 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0xCD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xAB PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706572747920616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE DUP5 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x1 DUP7 DUP9 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP10 ADD DUP2 DUP2 MSTORE DUP4 SLOAD DUP1 DUP6 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE SWAP11 MLOAD PUSH1 0x3 SWAP1 SWAP2 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP2 ADD DUP1 SLOAD SWAP3 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP5 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP7 ADD DUP1 SLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP11 AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP8 SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD DUP4 DUP7 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP5 DUP7 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0x893A9C1D8D241F202772E01F1EAA3CEA88CD9B2A5BB4EBD1F98BC7DF4F740FAC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP2 DUP3 AND DUP6 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x359 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0x788 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x420 JUMPI DUP2 PUSH2 0x41C DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x42A DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x44A PUSH1 0x0 PUSH2 0x600 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP5 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7065727479206E6F742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x513 DUP2 DUP5 PUSH2 0x7CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x67F1125DF14F08F21B9416BA66F0C4E6093CE1BBFA949A38A8CD5A52F8B56ED6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x59D PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x600 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x688 DUP4 PUSH2 0x650 JUMP JUMPDEST SWAP2 POP PUSH2 0x696 PUSH1 0x20 DUP5 ADD PUSH2 0x650 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x726 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD ISZERO ISZERO DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6DE JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x768 DUP4 PUSH2 0x650 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x7C6 JUMPI PUSH2 0x7C6 PUSH2 0x79E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D BASEFEE PUSH20 0xDD5731D43055AEC892392835CA4E9AF5B7485D56 PUSH21 0x507412B117F7D9E464736F6C634300081400330000 ",
							"sourceMap": "165:2427:0:-:0;;;818:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;860:12;-1:-1:-1;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;455:51:3;428:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;818:58:0;165:2427;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:3:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;309:203::-;165:2427:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_256": {
									"entryPoint": 1491,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_318": {
									"entryPoint": 1536,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getActivePropertiesCount_170": {
									"entryPoint": 972,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAllProperties_136": {
									"entryPoint": 821,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@propertyIndex_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerProperty_89": {
									"entryPoint": 394,
									"id": 89,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@registeredProperties_17": {
									"entryPoint": 1100,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_270": {
									"entryPoint": 1080,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPropertyStatus_126": {
									"entryPoint": 1176,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_298": {
									"entryPoint": 1429,
									"id": 298,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62d1af3c1db2ea0552d66b56bd35c29a4367a978899c60f6896a34e70070fe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5ed409a7803f2cc2b11286604ccbc1b4b614da27ed2e3161359b3e1da69e725__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4493:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:3"
															},
															"nodeType": "YulIf",
															"src": "111:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:173:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:3"
															},
															"nodeType": "YulIf",
															"src": "289:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "442:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "427:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "427:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "408:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:3",
														"type": ""
													}
												],
												"src": "192:260:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "582:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "585:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "575:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "575:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "575:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "548:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "557:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "569:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:32:3"
															},
															"nodeType": "YulIf",
															"src": "537:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "598:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "627:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "608:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "493:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "504:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "516:6:3",
														"type": ""
													}
												],
												"src": "457:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "759:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "782:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "759:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "794:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "794:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "718:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "729:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "740:4:3",
														"type": ""
													}
												],
												"src": "648:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1049:798:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1059:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1069:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1063:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1080:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1098:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1109:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:18:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1084:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1128:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1139:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1121:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1151:17:3",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1162:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1155:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1177:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1197:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1191:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1181:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1220:6:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1228:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1213:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1213:22:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1244:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1254:2:3",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1248:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1265:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1276:9:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1287:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1317:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1303:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1337:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1346:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1341:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1405:416:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1419:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1435:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1429:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1429:13:3"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1423:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1455:29:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1473:3:3",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1478:1:3",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1469:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1469:11:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1482:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "1465:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1465:19:3"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "1459:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1504:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1519:2:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1513:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1513:9:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1524:2:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1509:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1509:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1497:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1497:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1497:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1552:3:3"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1557:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1548:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1548:12:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1576:2:3"
																										},
																										{
																											"name": "_1",
																											"nodeType": "YulIdentifier",
																											"src": "1580:2:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1572:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1572:11:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1566:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1566:18:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1586:2:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1562:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1562:27:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1541:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1541:49:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1541:49:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1614:3:3"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1619:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1610:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1610:12:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_3",
																													"nodeType": "YulIdentifier",
																													"src": "1648:2:3"
																												},
																												{
																													"name": "_2",
																													"nodeType": "YulIdentifier",
																													"src": "1652:2:3"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "1644:3:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "1644:11:3"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nodeType": "YulIdentifier",
																										"src": "1638:5:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1638:18:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "1631:6:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1631:26:3"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "1624:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1624:34:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1603:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1603:56:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1603:56:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1672:14:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1682:4:3",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "1676:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1710:3:3"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1715:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1706:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:12:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1730:2:3"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "1734:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1726:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1726:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1720:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1720:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1699:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1699:40:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1699:40:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1752:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1763:3:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1768:4:3",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1759:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1759:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1752:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1786:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1800:6:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1808:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1796:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1796:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1786:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1367:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1364:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1378:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1380:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1389:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1392:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1385:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1385:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1380:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1360:3:3",
																"statements": []
															},
															"src": "1356:465:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1830:11:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1838:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1830:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1018:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1029:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1040:4:3",
														"type": ""
													}
												],
												"src": "830:1017:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1963:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1975:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1986:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1963:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2005:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2020:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2036:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2041:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2032:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2032:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2045:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2028:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2028:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2016:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1922:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1944:4:3",
														"type": ""
													}
												],
												"src": "1852:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2176:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2151:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2147:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2147:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2172:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:32:3"
															},
															"nodeType": "YulIf",
															"src": "2140:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2201:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2224:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2211:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2096:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2107:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2119:6:3",
														"type": ""
													}
												],
												"src": "2060:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:278:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2434:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2470:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2488:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2484:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2484:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2497:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2474:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2515:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2530:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2538:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2526:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2508:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2508:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2562:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2573:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2558:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2558:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2582:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2590:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2578:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2551:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2614:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2625:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2610:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2610:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "2644:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2637:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2637:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2630:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:50:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2669:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2662:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2369:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2380:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2388:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2396:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2404:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2415:4:3",
														"type": ""
													}
												],
												"src": "2245:457:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2846:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2849:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2839:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:3"
															},
															"nodeType": "YulIf",
															"src": "2801:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2862:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2891:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2872:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2862:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2910:45:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2940:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2936:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2936:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2923:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:32:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2914:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3020:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3010:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2977:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2998:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2991:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2991:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2984:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2984:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2974:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:40:3"
															},
															"nodeType": "YulIf",
															"src": "2964:60:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3033:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3043:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2749:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2760:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2772:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2780:6:3",
														"type": ""
													}
												],
												"src": "2707:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3233:177:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3250:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3323:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3334:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:18:3"
																	},
																	{
																		"hexValue": "50726f706572747920616c72656164792072656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3339:29:3",
																		"type": "",
																		"value": "Property already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:57:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3378:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3378:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62d1af3c1db2ea0552d66b56bd35c29a4367a978899c60f6896a34e70070fe09__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3210:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3224:4:3",
														"type": ""
													}
												],
												"src": "3059:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3447:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3476:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3467:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3457:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3507:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3528:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3531:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3415:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3579:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3596:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3603:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3608:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3599:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3599:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3589:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3639:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3629:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3629:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3660:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3653:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3547:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3726:88:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3757:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3759:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3759:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3759:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3742:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3753:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3749:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3749:6:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3739:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:17:3"
															},
															"nodeType": "YulIf",
															"src": "3736:43:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3788:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3799:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3806:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3788:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3708:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3718:3:3",
														"type": ""
													}
												],
												"src": "3679:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:173:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4003:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4033:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:18:3"
																	},
																	{
																		"hexValue": "50726f7065727479206e6f742072656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4099:25:3",
																		"type": "",
																		"value": "Property not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4072:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4072:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4134:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4146:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4134:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5ed409a7803f2cc2b11286604ccbc1b4b614da27ed2e3161359b3e1da69e725__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3970:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3984:4:3",
														"type": ""
													}
												],
												"src": "3819:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4220:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4230:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4242:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4245:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4238:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4230:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4271:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4273:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4273:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4273:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4262:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4268:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4259:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:11:3"
															},
															"nodeType": "YulIf",
															"src": "4256:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4202:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4205:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4211:4:3",
														"type": ""
													}
												],
												"src": "4171:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4399:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4409:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4421:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4417:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4409:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4451:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4476:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4469:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4469:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4462:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4444:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4444:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4444:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4368:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4379:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4390:4:3",
														"type": ""
													}
												],
												"src": "4304:187:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := sub(shl(160, 1), 1)\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), _4))\n            mstore(add(pos, _2), iszero(iszero(mload(add(_3, _2)))))\n            let _5 := 0x60\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_62d1af3c1db2ea0552d66b56bd35c29a4367a978899c60f6896a34e70070fe09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Property already registered\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_d5ed409a7803f2cc2b11286604ccbc1b4b614da27ed2e3161359b3e1da69e725__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Property not registered\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fd5780638da5cb5b14610105578063a4beaa5814610120578063aaf0293714610164578063f2fde38b1461017757600080fd5b806302fb243a146100985780632e4774c6146100ad5780633d51402c146100e0578063603ddf11146100f5575b600080fd5b6100ab6100a636600461066c565b61018a565b005b6100cd6100bb36600461069f565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100e8610335565b6040516100d791906106c1565b6100cd6103cc565b6100ab610438565b6000546040516001600160a01b0390911681526020016100d7565b61013361012e366004610733565b61044c565b604080516001600160a01b0395861681529490931660208501529015159183019190915260608201526080016100d7565b6100ab61017236600461074c565b610498565b6100ab61018536600461069f565b610595565b6101926105d3565b6001600160a01b038216600090815260026020526040902054156101fd5760405162461bcd60e51b815260206004820152601b60248201527f50726f706572747920616c72656164792072656769737465726564000000000060448201526064015b60405180910390fd5b604080516080810182526001600160a01b038481168083528482166020808501828152600186880181815242606089018181528354808501855560008581529a5160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681018054928c166001600160a01b03199093169290921790915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78601805494511515600160a01b026001600160a81b031990951691909a161792909217909755517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf890920191909155548386526002825294869020949094559351918252917f893a9c1d8d241f202772e01f1eaa3cea88cd9b2a5bb4ebd1f98bc7df4f740fac910160405180910390a35050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156103c3576000848152602090819020604080516080810182526003860290920180546001600160a01b03908116845260018083015491821685870152600160a01b90910460ff161515928401929092526002015460608301529083529092019101610359565b50505050905090565b600080805b60015481101561043257600181815481106103ee576103ee610788565b906000526020600020906003020160010160149054906101000a900460ff1615610420578161041c816107b4565b9250505b8061042a816107b4565b9150506103d1565b50919050565b6104406105d3565b61044a6000610600565b565b6001818154811061045c57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03918216935090821691600160a01b900460ff169084565b6104a06105d3565b6001600160a01b038216600090815260026020526040902054806105065760405162461bcd60e51b815260206004820152601760248201527f50726f7065727479206e6f74207265676973746572656400000000000000000060448201526064016101f4565b81600161051381846107cd565b8154811061052357610523610788565b906000526020600020906003020160010160146101000a81548160ff021916908315150217905550826001600160a01b03167f67f1125df14f08f21b9416ba66f0c4e6093ce1bbfa949a38a8cd5a52f8b56ed683604051610588911515815260200190565b60405180910390a2505050565b61059d6105d3565b6001600160a01b0381166105c757604051631e4fbdf760e01b8152600060048201526024016101f4565b6105d081610600565b50565b6000546001600160a01b0316331461044a5760405163118cdaa760e01b81523360048201526024016101f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461066757600080fd5b919050565b6000806040838503121561067f57600080fd5b61068883610650565b915061069660208401610650565b90509250929050565b6000602082840312156106b157600080fd5b6106ba82610650565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561072657815180516001600160a01b0390811686528782015116878601528581015115158686015260609081015190850152608090930192908501906001016106de565b5091979650505050505050565b60006020828403121561074557600080fd5b5035919050565b6000806040838503121561075f57600080fd5b61076883610650565b91506020830135801515811461077d57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107c6576107c661079e565b5060010190565b818103818111156107e0576107e061079e565b9291505056fea26469706673582212205d4873dd5731d43055aec892392835ca4e9af5b7485d5674507412b117f7d9e464736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xA4BEAA58 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xAAF02937 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2FB243A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E4774C6 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x3D51402C EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x603DDF11 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCD PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0xCD PUSH2 0x3CC JUMP JUMPDEST PUSH2 0xAB PUSH2 0x438 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD7 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F706572747920616C726561647920726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE DUP5 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x1 DUP7 DUP9 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP10 ADD DUP2 DUP2 MSTORE DUP4 SLOAD DUP1 DUP6 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE SWAP11 MLOAD PUSH1 0x3 SWAP1 SWAP2 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 DUP2 ADD DUP1 SLOAD SWAP3 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP5 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP7 ADD DUP1 SLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP6 AND SWAP2 SWAP1 SWAP11 AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP8 SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD DUP4 DUP7 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP5 DUP7 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD SWAP2 DUP3 MSTORE SWAP2 PUSH32 0x893A9C1D8D241F202772E01F1EAA3CEA88CD9B2A5BB4EBD1F98BC7DF4F740FAC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP2 DUP3 AND DUP6 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x359 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3EE JUMPI PUSH2 0x3EE PUSH2 0x788 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x420 JUMPI DUP2 PUSH2 0x41C DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x42A DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x440 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x44A PUSH1 0x0 PUSH2 0x600 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP SWAP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP5 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F7065727479206E6F742072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x513 DUP2 DUP5 PUSH2 0x7CD JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x523 JUMPI PUSH2 0x523 PUSH2 0x788 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x67F1125DF14F08F21B9416BA66F0C4E6093CE1BBFA949A38A8CD5A52F8B56ED6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x59D PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x600 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x67F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x688 DUP4 PUSH2 0x650 JUMP JUMPDEST SWAP2 POP PUSH2 0x696 PUSH1 0x20 DUP5 ADD PUSH2 0x650 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x650 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x726 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD ISZERO ISZERO DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6DE JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x768 DUP4 PUSH2 0x650 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x7C6 JUMPI PUSH2 0x7C6 PUSH2 0x79E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E0 JUMPI PUSH2 0x7E0 PUSH2 0x79E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D BASEFEE PUSH20 0xDD5731D43055AEC892392835CA4E9AF5B7485D56 PUSH21 0x507412B117F7D9E464736F6C634300081400330000 ",
							"sourceMap": "165:2427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:704;;;;;;:::i;:::-;;:::i;:::-;;554:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;794:25:3;;;782:2;767:18;554:48:0;;;;;;;;2128:124;;;:::i;:::-;;;;;;;:::i;2297:293::-;;;:::i;2293:101:1:-;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:1;;;1998:51:3;;1986:2;1971:18;1638:85:1;1852:203:3;416:48:0;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2526:15:3;;;2508:34;;2578:15;;;;2573:2;2558:18;;2551:43;2637:14;;2630:22;2610:18;;;2603:50;;;;2684:2;2669:18;;2662:34;2457:3;2442:19;416:48:0;2245:457:3;1688:393:0;;;;;;:::i;:::-;;:::i;2543:215:1:-;;;;;;:::i;:::-;;:::i;917:704:0:-;1531:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;1087:27:0;::::1;;::::0;;;:13:::1;:27;::::0;;;;;:32;1079:72:::1;;;::::0;-1:-1:-1;;;1079:72:0;;3261:2:3;1079:72:0::1;::::0;::::1;3243:21:3::0;3300:2;3280:18;;;3273:30;3339:29;3319:18;;;3312:57;3386:18;;1079:72:0::1;;;;;;;;;1196:187;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;1196:187:0;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;1170:20:::1;1196:187:::0;;;;;;1357:15:::1;1196:187:::0;;;;;;1170:214;;;;::::1;::::0;;-1:-1:-1;1170:214:0;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;1170:214:0;;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;1170:214:0::1;-1:-1:-1::0;;;;;;1170:214:0;;;;;;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;1498:27;1468;;;1170:214:::1;1468:27:::0;;;;;;:57;;;;1549:65;;794:25:3;;;1196:187:0;1549:65:::1;::::0;767:18:3;1549:65:0::1;;;;;;;917:704:::0;;:::o;2128:124::-;2179:27;2225:20;2218:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2218:27:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;2218:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2128:124;:::o;2297:293::-;2356:7;;;2402:160;2426:20;:27;2422:31;;2402:160;;;2478:20;2499:1;2478:23;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;;;;;;;;;;2474:78;;;2530:7;;;;:::i;:::-;;;;2474:78;2455:3;;;;:::i;:::-;;;;2402:160;;;-1:-1:-1;2578:5:0;2297:293;-1:-1:-1;2297:293:0:o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;416:48:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:48:0;;;;-1:-1:-1;416:48:0;;;;-1:-1:-1;;;416:48:0;;;;;;:::o;1688:393::-;1531:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;1798:27:0;::::1;1782:13;1798:27:::0;;;:13:::1;:27;::::0;;;;;1843:9;1835:45:::1;;;::::0;-1:-1:-1;;;1835:45:0;;4021:2:3;1835:45:0::1;::::0;::::1;4003:21:3::0;4060:2;4040:18;;;4033:30;4099:25;4079:18;;;4072:53;4142:18;;1835:45:0::1;3819:347:3::0;1835:45:0::1;1995:9:::0;1952:20:::1;1973:9;1952:20:::0;1973:5;:9:::1;:::i;:::-;1952:31;;;;;;;;:::i;:::-;;;;;;;;;;;:40;;;:52;;;;;;;;;;;;;;;;;;2050:12;-1:-1:-1::0;;;;;2028:46:0::1;;2064:9;2028:46;;;;4469:14:3::0;4462:22;4444:41;;4432:2;4417:18;;4304:187;2028:46:0::1;;;;;;;;1772:309;1688:393:::0;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;1998:51:3::0;1971:18;;2672:31:1::1;1852:203:3::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:2;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:2;1901:40:1;;;1998:51:3;1971:18;;1901:40:1;1852:203:3;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:3:-;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:186::-;516:6;569:2;557:9;548:7;544:23;540:32;537:52;;;585:1;582;575:12;537:52;608:29;627:9;608:29;:::i;:::-;598:39;457:186;-1:-1:-1;;;457:186:3:o;830:1017::-;1069:2;1121:21;;;1191:13;;1094:18;;;1213:22;;;1040:4;;1069:2;1254;;1272:18;;;;1313:15;;;1040:4;1356:465;1370:6;1367:1;1364:13;1356:465;;;1429:13;;1513:9;;-1:-1:-1;;;;;1509:18:3;;;1497:31;;1572:11;;;1566:18;1562:27;1548:12;;;1541:49;1644:11;;;1638:18;1631:26;1624:34;1610:12;;;1603:56;1682:4;1726:11;;;1720:18;1706:12;;;1699:40;1768:4;1759:14;;;;1796:15;;;;1482:1;1385:9;1356:465;;;-1:-1:-1;1838:3:3;;830:1017;-1:-1:-1;;;;;;;830:1017:3:o;2060:180::-;2119:6;2172:2;2160:9;2151:7;2147:23;2143:32;2140:52;;;2188:1;2185;2178:12;2140:52;-1:-1:-1;2211:23:3;;2060:180;-1:-1:-1;2060:180:3:o;2707:347::-;2772:6;2780;2833:2;2821:9;2812:7;2808:23;2804:32;2801:52;;;2849:1;2846;2839:12;2801:52;2872:29;2891:9;2872:29;:::i;:::-;2862:39;;2951:2;2940:9;2936:18;2923:32;2998:5;2991:13;2984:21;2977:5;2974:32;2964:60;;3020:1;3017;3010:12;2964:60;3043:5;3033:15;;;2707:347;;;;;:::o;3415:127::-;3476:10;3471:3;3467:20;3464:1;3457:31;3507:4;3504:1;3497:15;3531:4;3528:1;3521:15;3547:127;3608:10;3603:3;3599:20;3596:1;3589:31;3639:4;3636:1;3629:15;3663:4;3660:1;3653:15;3679:135;3718:3;3739:17;;;3736:43;;3759:18;;:::i;:::-;-1:-1:-1;3806:1:3;3795:13;;3679:135::o;4171:128::-;4238:9;;;4259:11;;;4256:37;;;4273:18;;:::i;:::-;4171:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "415200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getActivePropertiesCount()": "infinite",
								"getAllProperties()": "infinite",
								"owner()": "2323",
								"propertyIndex(address)": "2531",
								"registerProperty(address,address)": "infinite",
								"registeredProperties(uint256)": "9018",
								"renounceOwnership()": "infinite",
								"setPropertyStatus(address,bool)": "32865",
								"transferOwnership(address)": "28421"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 818,
									"end": 876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 818,
									"end": 876,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 860,
									"end": 872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 818,
									"end": 876,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 2592,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d4873dd5731d43055aec892392835ca4e9af5b7485d5674507412b117f7d9e464736f6c63430008140033",
									".code": [
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "A4BEAA58"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "AAF02937"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "2FB243A"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "2E4774C6"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "3D51402C"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "603DDF11"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 2592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 917,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 917,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 554,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 794,
											"end": 819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 794,
											"end": 819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 554,
											"end": 602,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 554,
											"end": 602,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2128,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2128,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2297,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2049,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2049,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1852,
											"end": 2055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2526,
											"end": 2541,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2575,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2652,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2669,
											"end": 2687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2662,
											"end": 2696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2245,
											"end": 2702,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1688,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1688,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1087,
											"end": 1114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1079,
											"end": 1151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3264,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3302,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3273,
											"end": 3303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3339,
											"end": 3368,
											"name": "PUSH",
											"source": 3,
											"value": "50726F706572747920616C726561647920726567697374657265640000000000"
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1079,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1357,
											"end": 1372,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7"
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "B10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8"
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 794,
											"end": 819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 794,
											"end": 819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "893A9C1D8D241F202772E01F1EAA3CEA88CD9B2A5BB4EBD1F98BC7DF4F740FAC"
										},
										{
											"begin": 1549,
											"end": 1614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1614,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 917,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2498,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2478,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2552,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2474,
											"end": 2552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2530,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2474,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2455,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2402,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 416,
											"end": 464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 416,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1798,
											"end": 1825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1843,
											"end": 1852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1835,
											"end": 1880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4021,
											"end": 4023,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1835,
											"end": 1880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4033,
											"end": 4063,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "50726F7065727479206E6F742072656769737465726564000000000000000000"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4072,
											"end": 4125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4142,
											"end": 4160,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3819,
											"end": 4166,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1835,
											"end": 1880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1973,
											"end": 1982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1973,
											"end": 1982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1952,
											"end": 1983,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1952,
											"end": 1992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2004,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "67F1125DF14F08F21B9416BA66F0C4E6093CE1BBFA949A38A8CD5A52F8B56ED6"
										},
										{
											"begin": 2064,
											"end": 2073,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4483,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4485,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4485,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4432,
											"end": 4434,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4304,
											"end": 4491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2074,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 2081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 2081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2049,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1852,
											"end": 2055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2049,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1852,
											"end": 2055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 427,
											"end": 445,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 408,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 408,
											"end": 446,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 408,
											"end": 446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 398,
											"end": 446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 398,
											"end": 446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 192,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 457,
											"end": 643,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 548,
											"end": 555,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 544,
											"end": 567,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 540,
											"end": 572,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 537,
											"end": 589,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 537,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 587,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 537,
											"end": 589,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 537,
											"end": 589,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 608,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 608,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 608,
											"end": 637,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 608,
											"end": 637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 598,
											"end": 637,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 457,
											"end": 643,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 457,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1847,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 830,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1204,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1204,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1235,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1313,
											"end": 1328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1522,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1528,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1589,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1560,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1560,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1590,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1655,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1655,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1631,
											"end": 1657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1622,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1659,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1726,
											"end": 1737,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1738,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1773,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1356,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 830,
											"end": 1847,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2240,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2060,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2833,
											"end": 2835,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2836,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2801,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2851,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2801,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2872,
											"end": 2901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2872,
											"end": 2901,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2872,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3006,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2964,
											"end": 3024,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3022,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2964,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 3054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3542,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3415,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3467,
											"end": 3487,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3511,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3504,
											"end": 3505,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3512,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3674,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3547,
											"end": 3674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3608,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3603,
											"end": 3606,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3599,
											"end": 3619,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3643,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3636,
											"end": 3637,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3644,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3668,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3814,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3679,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3756,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3736,
											"end": 3779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3759,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3795,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3795,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4247,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4256,
											"end": 4293,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4256,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4256,
											"end": 4293,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4273,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/registry/PropertyRegistry.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getActivePropertiesCount()": "603ddf11",
							"getAllProperties()": "3d51402c",
							"owner()": "8da5cb5b",
							"propertyIndex(address)": "2e4774c6",
							"registerProperty(address,address)": "02fb243a",
							"registeredProperties(uint256)": "a4beaa58",
							"renounceOwnership()": "715018a6",
							"setPropertyStatus(address,bool)": "aaf02937",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"propertyNFT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"propertyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PropertyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"propertyNFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"PropertyStatusChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getActivePropertiesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProperties\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"propertyNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"propertyToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationDate\",\"type\":\"uint256\"}],\"internalType\":\"struct PropertyRegistry.RegisteredProperty[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"propertyIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_propertyNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_propertyToken\",\"type\":\"address\"}],\"name\":\"registerProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredProperties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"propertyNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"propertyToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_propertyNFT\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setPropertyStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/PropertyRegistry.sol\":\"PropertyRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/registry/PropertyRegistry.sol\":{\"keccak256\":\"0xf813bf12e3bf473099c005bc7e310ae1f840dc0eed165a5f6f18cd6514626e05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfe3fca0f44f4fc97cbbe31d405a8433bef8e7804590d80f14e0d35aef92acea\",\"dweb:/ipfs/Qmf2JYaPBC37dgs61s2ZwaRCkvxpW3J1FWMdhxbCsMRPZp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 180,
								"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 17,
								"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
								"label": "registeredProperties",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(RegisteredProperty)13_storage)dyn_storage"
							},
							{
								"astId": 21,
								"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
								"label": "propertyIndex",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(RegisteredProperty)13_storage)dyn_storage": {
								"base": "t_struct(RegisteredProperty)13_storage",
								"encoding": "dynamic_array",
								"label": "struct PropertyRegistry.RegisteredProperty[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(RegisteredProperty)13_storage": {
								"encoding": "inplace",
								"label": "struct PropertyRegistry.RegisteredProperty",
								"members": [
									{
										"astId": 6,
										"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
										"label": "propertyNFT",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 8,
										"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
										"label": "propertyToken",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 10,
										"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
										"label": "isActive",
										"offset": 20,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 12,
										"contract": "contracts/registry/PropertyRegistry.sol:PropertyRegistry",
										"label": "registrationDate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 180,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/registry/PropertyRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/PropertyRegistry.sol",
					"exportedSymbols": {
						"Context": [
							341
						],
						"Ownable": [
							319
						],
						"PropertyRegistry": [
							171
						]
					},
					"id": 172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 172,
							"sourceUnit": 320,
							"src": "58:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nameLocations": [
											"194:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "194:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "194:7:0"
								}
							],
							"canonicalName": "PropertyRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171,
								319,
								341
							],
							"name": "PropertyRegistry",
							"nameLocation": "174:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PropertyRegistry.RegisteredProperty",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "propertyNFT",
											"nameLocation": "252:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "244:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "244:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "propertyToken",
											"nameLocation": "281:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "273:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "273:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "309:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "304:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 9,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "304:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "registrationDate",
											"nameLocation": "335:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "327:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "327:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RegisteredProperty",
									"nameLocation": "215:18:0",
									"nodeType": "StructDefinition",
									"scope": 171,
									"src": "208:150:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4beaa58",
									"id": 17,
									"mutability": "mutable",
									"name": "registeredProperties",
									"nameLocation": "444:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "416:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
										"typeString": "struct PropertyRegistry.RegisteredProperty[]"
									},
									"typeName": {
										"baseType": {
											"id": 15,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 14,
												"name": "RegisteredProperty",
												"nameLocations": [
													"416:18:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 13,
												"src": "416:18:0"
											},
											"referencedDeclaration": 13,
											"src": "416:18:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RegisteredProperty_$13_storage_ptr",
												"typeString": "struct PropertyRegistry.RegisteredProperty"
											}
										},
										"id": 16,
										"nodeType": "ArrayTypeName",
										"src": "416:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage_ptr",
											"typeString": "struct PropertyRegistry.RegisteredProperty[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4774c6",
									"id": 21,
									"mutability": "mutable",
									"name": "propertyIndex",
									"nameLocation": "589:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "554:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "562:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "554:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "573:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "893a9c1d8d241f202772e01f1eaa3cea88cd9b2a5bb4ebd1f98bc7df4f740fac",
									"id": 29,
									"name": "PropertyRegistered",
									"nameLocation": "633:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "propertyNFT",
												"nameLocation": "668:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "652:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "propertyToken",
												"nameLocation": "697:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "681:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "720:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "712:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:79:0"
									},
									"src": "627:104:0"
								},
								{
									"anonymous": false,
									"eventSelector": "67f1125df14f08f21b9416ba66f0c4e6093ce1bbfa949a38a8cd5a52f8b56ed6",
									"id": 35,
									"name": "PropertyStatusChanged",
									"nameLocation": "742:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "propertyNFT",
												"nameLocation": "780:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "764:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "793:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:44:0"
									},
									"src": "736:72:0"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "874:2:0",
										"statements": []
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 40,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 37,
													"src": "860:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 41,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 39,
												"name": "Ownable",
												"nameLocations": [
													"852:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "852:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "838:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "830:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:22:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 171,
									"src": "818:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1008:613:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 54,
																	"name": "propertyIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "1087:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 56,
																"indexExpression": {
																	"id": 55,
																	"name": "_propertyNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "1101:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1087:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1118:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1087:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f706572747920616c72656164792072656769737465726564",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1121:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62d1af3c1db2ea0552d66b56bd35c29a4367a978899c60f6896a34e70070fe09",
																"typeString": "literal_string \"Property already registered\""
															},
															"value": "Property already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62d1af3c1db2ea0552d66b56bd35c29a4367a978899c60f6896a34e70070fe09",
																"typeString": "literal_string \"Property already registered\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1079:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 66,
																	"name": "_propertyNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "1242:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 67,
																	"name": "_propertyToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1283:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"hexValue": "74727565",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1321:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"expression": {
																		"id": 69,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1357:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1363:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1357:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 65,
																"name": "RegisteredProperty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1196:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_RegisteredProperty_$13_storage_ptr_$",
																	"typeString": "type(struct PropertyRegistry.RegisteredProperty storage pointer)"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1229:11:0",
																"1268:13:0",
																"1311:8:0",
																"1339:16:0"
															],
															"names": [
																"propertyNFT",
																"propertyToken",
																"isActive",
																"registrationDate"
															],
															"nodeType": "FunctionCall",
															"src": "1196:187:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RegisteredProperty_$13_memory_ptr",
																"typeString": "struct PropertyRegistry.RegisteredProperty memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RegisteredProperty_$13_memory_ptr",
																"typeString": "struct PropertyRegistry.RegisteredProperty memory"
															}
														],
														"expression": {
															"id": 62,
															"name": "registeredProperties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1170:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
																"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1191:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1170:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage_ptr_$_t_struct$_RegisteredProperty_$13_storage_$returns$__$attached_to$_t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct PropertyRegistry.RegisteredProperty storage ref[] storage pointer,struct PropertyRegistry.RegisteredProperty storage ref)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:214:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1170:214:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 74,
															"name": "propertyIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "1468:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"id": 75,
															"name": "_propertyNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1482:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1468:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 77,
															"name": "registeredProperties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1498:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
																"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1519:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1498:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1468:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "1468:57:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 82,
															"name": "_propertyNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1568:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 83,
															"name": "_propertyToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1582:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 84,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1598:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1604:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1598:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 81,
														"name": "PropertyRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1549:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "EmitStatement",
												"src": "1544:70:0"
											}
										]
									},
									"functionSelector": "02fb243a",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 50,
												"name": "onlyOwner",
												"nameLocations": [
													"998:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "998:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "998:9:0"
										}
									],
									"name": "registerProperty",
									"nameLocation": "926:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_propertyNFT",
												"nameLocation": "951:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "943:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_propertyToken",
												"nameLocation": "973:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "965:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:46:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:0"
									},
									"scope": 171,
									"src": "917:704:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1772:309:0",
										"statements": [
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "1790:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "1782:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 98,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 103,
												"initialValue": {
													"baseExpression": {
														"id": 100,
														"name": "propertyIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1798:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 102,
													"indexExpression": {
														"id": 101,
														"name": "_propertyNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1812:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1798:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1782:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1843:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1843:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f7065727479206e6f742072656769737465726564",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1854:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5ed409a7803f2cc2b11286604ccbc1b4b614da27ed2e3161359b3e1da69e725",
																"typeString": "literal_string \"Property not registered\""
															},
															"value": "Property not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5ed409a7803f2cc2b11286604ccbc1b4b614da27ed2e3161359b3e1da69e725",
																"typeString": "literal_string \"Property not registered\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 111,
																"name": "registeredProperties",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1952:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
																	"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
																}
															},
															"id": 115,
															"indexExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 112,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1973:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1973:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1952:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RegisteredProperty_$13_storage",
																"typeString": "struct PropertyRegistry.RegisteredProperty storage ref"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1984:8:0",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1952:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 117,
														"name": "_isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1995:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1952:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1952:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 121,
															"name": "_propertyNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2050:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 122,
															"name": "_isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2064:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 120,
														"name": "PropertyStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2028:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "2023:51:0"
											}
										]
									},
									"functionSelector": "aaf02937",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 96,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 95,
												"name": "onlyOwner",
												"nameLocations": [
													"1762:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "1762:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1762:9:0"
										}
									],
									"name": "setPropertyStatus",
									"nameLocation": "1697:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_propertyNFT",
												"nameLocation": "1723:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1715:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_isActive",
												"nameLocation": "1742:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:38:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:0:0"
									},
									"scope": 171,
									"src": "1688:393:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "2208:44:0",
										"statements": [
											{
												"expression": {
													"id": 133,
													"name": "registeredProperties",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "2225:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
														"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 132,
												"id": 134,
												"nodeType": "Return",
												"src": "2218:27:0"
											}
										]
									},
									"functionSelector": "3d51402c",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllProperties",
									"nameLocation": "2137:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:2:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2179:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PropertyRegistry.RegisteredProperty[]"
												},
												"typeName": {
													"baseType": {
														"id": 129,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 128,
															"name": "RegisteredProperty",
															"nameLocations": [
																"2179:18:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 13,
															"src": "2179:18:0"
														},
														"referencedDeclaration": 13,
														"src": "2179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RegisteredProperty_$13_storage_ptr",
															"typeString": "struct PropertyRegistry.RegisteredProperty"
														}
													},
													"id": 130,
													"nodeType": "ArrayTypeName",
													"src": "2179:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage_ptr",
														"typeString": "struct PropertyRegistry.RegisteredProperty[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:29:0"
									},
									"scope": 171,
									"src": "2128:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "2365:225:0",
										"statements": [
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2383:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 169,
														"src": "2375:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"hexValue": "30",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2391:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2375:17:0"
											},
											{
												"body": {
													"id": 165,
													"nodeType": "Block",
													"src": "2460:102:0",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"id": 156,
																		"name": "registeredProperties",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "2478:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
																			"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
																		}
																	},
																	"id": 158,
																	"indexExpression": {
																		"id": 157,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "2499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2478:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RegisteredProperty_$13_storage",
																		"typeString": "struct PropertyRegistry.RegisteredProperty storage ref"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2502:8:0",
																"memberName": "isActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "2478:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 164,
															"nodeType": "IfStatement",
															"src": "2474:78:0",
															"trueBody": {
																"id": 163,
																"nodeType": "Block",
																"src": "2512:40:0",
																"statements": [
																	{
																		"expression": {
																			"id": 161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2530:7:0",
																			"subExpression": {
																				"id": 160,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 142,
																				"src": "2530:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 162,
																		"nodeType": "ExpressionStatement",
																		"src": "2530:7:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 149,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 150,
															"name": "registeredProperties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2426:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RegisteredProperty_$13_storage_$dyn_storage",
																"typeString": "struct PropertyRegistry.RegisteredProperty storage ref[] storage ref"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2447:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2426:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2422:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"initializationExpression": {
													"assignments": [
														146
													],
													"declarations": [
														{
															"constant": false,
															"id": 146,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2415:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 166,
															"src": "2407:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 145,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 148,
													"initialValue": {
														"hexValue": "30",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2419:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2407:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2455:3:0",
														"subExpression": {
															"id": 153,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "2455:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 155,
													"nodeType": "ExpressionStatement",
													"src": "2455:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2402:160:0"
											},
											{
												"expression": {
													"id": 167,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "2578:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 168,
												"nodeType": "Return",
												"src": "2571:12:0"
											}
										]
									},
									"functionSelector": "603ddf11",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActivePropertiesCount",
									"nameLocation": "2306:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:2:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:9:0"
									},
									"scope": 171,
									"src": "2297:293:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 172,
							"src": "165:2427:0",
							"usedErrors": [
								185,
								190
							],
							"usedEvents": [
								29,
								35,
								196
							]
						}
					],
					"src": "32:2560:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							341
						],
						"Ownable": [
							319
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 342,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 174,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 341,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "692:7:1"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								341
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 179,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 185,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 190,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 196,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 203,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 216,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 215,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 209,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 208,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 214,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 319,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 228,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 230,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 319,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 243,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 245,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 248,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 252,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 319,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 262,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 319,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 279,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 285,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 284,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 290,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 293,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 275,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 319,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													305
												],
												"declarations": [
													{
														"constant": false,
														"id": 305,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 304,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"id": 306,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 313,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 312,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 319,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "663:2438:1",
							"usedErrors": [
								185,
								190
							],
							"usedEvents": [
								196
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v5.0.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 327,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 326,
												"id": 329,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 341,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 336,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 335,
												"id": 338,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 341,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 342,
							"src": "624:235:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:2"
				},
				"id": 2
			}
		}
	}
}